##
# Test the production of the complete chain:
# from digi to RecSegment 4D, through RecHit1D and RecSegment2D
# starting from real cosmic data from commissioning
# Up to now only the Linear Drift alogo is available for the
# commisioning data.
##

process PROD  = {

	# Mapping of the channels
	es_source mapping = PoolDBESSource { VPSet toGet = {
                                      {string record = "DTReadOutMappingRcd" 
                                       string tag = "mb_map"}
                                     }
		    		     bool loadAll = true
				     string connect = "sqlite_file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite/commissioning/wheel2/mb3_10.db"
				     untracked string catalog = "file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite/commissioning/wheel2/mb3Catalog.xml"
			             string timetype = "runnumber" 
				     untracked uint32 authenticationMethod = 0
				     untracked uint32 messagelevel = 0
				   }

	# Event Formatter
	source = DaqSource{ 
			string reader = "DTROS8FileReader"
			untracked int32 maxEvents = 1000
			PSet pset = {  string fileName ="/afs/cern.ch/cms/Physics/muon/CMSSW/DT/data/mb3_c12_3089" } 
	}
	
	# Data Unpacker
	module dtunpacker = DTUnpackingModule{ 
		string dataType = "ROS8" }
	
	# No Mag Field for the Commisioning Data
#       include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"

        include "Geometry/MuonCommonData/data/muonIdealGeometryXML.cfi"
        include "Geometry/DTGeometry/data/dtGeometry.cfi"

	# TTrig from DB
	es_source ttrig = PoolDBESSource {  VPSet toGet = {
                                    {string record = "DTTtrigRcd" 
                                     string tag = "commissioning_tTrig"
                                     } }
		    		     bool loadAll = true
                                     string connect = "sqlite_file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite/tTrig/tTrig_W+2+1.db"
                                     untracked string catalog = "file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite/tTrig/tTrig_W+2+1catalog.xml"
			             string timetype = "runnumber" 
				     untracked uint32 authenticationMethod = 0		
                                     untracked uint32 messagelevel = 0
				    }


	# T0 from DB
	es_source t0 = PoolDBESSource {  VPSet toGet = {
                                    {string record = "DTT0Rcd" 
                                     string tag = "commissioning_t0"
                                     } }
		    		     bool loadAll = true
                                     string connect = "sqlite_file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite/t0/t0_W+2+1.db"
                                     untracked string catalog = "file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite/t0/t0_W+2+1catalog.xml"
			             string timetype = "runnumber" 
				     untracked uint32 authenticationMethod = 0		
                                     untracked uint32 messagelevel = 0
				    }

	## _Vdrift1D_ ##
	include "RecoLocalMuon/DTRecHit/data/DTRecHit1DProducer_LinearDrift_CosmicData.cfi"
        #replace DTRecHit1DProducer.debug = true
        #replace DTRecHit1DProducer.recAlgoConfig.debug = true
        #replace DTRecHit1DProducer.recAlgoConfig.tTrigModeConfig.debug = true


	## _Vdrift2D_ ##
	include "RecoLocalMuon/DTSegment/data/DTSegment2DProducer_CombPatternReco2D_LinearDrift_CosmicData.cfi"

	## _4DAlgo ##
	include "RecoLocalMuon/DTSegment/data/DTSegment4DProducer_CombPatternReco4D_LinearDrift_CosmicData.cfi"

	## _all1DHits_ ##	
	# CAVEAT if all1DHits = false: 
	#	1- the file must contain the 2D segments
	#	2- defined only for CombinatorialPatternReco
#	replace DTSegment4DProducer.Reco4DAlgoConfig.AllDTRecHits = false


	## _Reader_ ##
	module DTRecSegment4DAnalyzer = DTRecSegment4DReader {
					untracked bool debug = true
			 		untracked string rootFileName = "seg4D.root"
					string recHits4DLabel = "recseg4dbuilder"
 				       }



	module out = PoolOutputModule {
				       untracked string fileName ="/tmp/rechit4D.root"
		  		      }

	## _ExecPath_ ##
	path p = {dtunpacker, DTRecHit1DProducer, DTSegment2DProducer,DTSegment4DProducer}

	#endpath this_is_the_end = {out}
}

