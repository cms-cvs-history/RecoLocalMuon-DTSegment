
# Test the production of the complete chain:
# from digi to RecSegment 4D, through RecHit1D and RecSegment2D
# starting from real cosmic data from commissioning
# Up to now only the Linear Drift alogo is available for the
# commisioning data.
##

process testDTAnalyzer  = {


  include "CondCore/DBCommon/data/CondDBSetup.cfi"

############################################################################################	
#			F I L E   R E A D E R 
############################################################################################	

# Event Formatter
  untracked PSet maxEvents = {
    untracked int32 input = 2
  }

# ======================================================
# 1) choose here your Input data 
# ======================================================
# global runs:
#  source = PoolSource {
#    untracked string fileMatchMode = "permissive"
#      untracked uint32 firstRun = 0
#      untracked uint32 firstEvent = 0
#      untracked uint32 skipEvents = 0
#      untracked vstring fileNames = {'file:/raid3/data/YB0/GlobalRun_20734_1.root'}
#  }

# local runs
       source = DaqSource{
        untracked string readerPluginName = "DTDDUFileReader"
        untracked PSet readerPset = {
# YB+1 data:	
#        untracked string fileName ="rfio:/raid3/data/YB+1/Sector_2/r15190.i0"   # sect 2 & 3
         untracked string fileName ="rfio:/raid3/data/YB+1/Sector_4/r17846.i0"   # sect 4
# YB+2:
#        untracked string fileName ="rfio:/raid3/data/YB+2/Sector_5/r18024.i0"  # sect 5 & 9
          untracked bool isRaw = true
             }
         }


# avoid printout at each event...
  service = MessageLogger {
    untracked vstring categories = { "CosmicMuonProducer" , "CosmicMuonTrajectoryBuilder" }
    untracked vstring destinations = { "cout" }
# untracked vstring categories = { "CosmicMuonProducer" }
    untracked vstring debugModules = { "*" }
    untracked vstring debugModules = { "CosmicMuonProducer" , "CosmicMuonTrajectoryBuilder" }
    untracked PSet cout = {
      untracked string threshold = "WARNING"
        untracked bool noLineBreaks = true
        untracked PSet WARNING = {untracked int32 limit = 0 }
    }
  }



# ===========================================================
# 2) Configure here the Data Unpacker
# =========================================================== 

# Data Unpacker
  module dtunpacker = DTUnpackingModule{ 
    string dataType = "DDU" 
      untracked bool writeSC = true
      untracked bool debugMode = false
      untracked bool readingDDU = true 
#      untracked bool isRaw = false
      untracked bool isRaw = true
#     untracked bool globalDAQ = true
      untracked bool globalDAQ = false
#     untracked bool readDDUIDfromDDU = true
      untracked bool readDDUIDfromDDU = false
      untracked int32 dduID = 770
      untracked bool performDataIntegrityMonitor = false
  }

#  ==============================================================================		
#  3) define here the Sector*(s) map to be used
#  ==============================================================================


  es_source dtPedestals = PoolDBESSource {
    string timetype = "runnumber"
# July global Run:    
#     string connect =  "sqlite_file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite/TestYB0/channelsMap_new/mapSec4.db"
#     untracked string catalog = "file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite/TestYB0/channelsMap_new/mapSec4.xml"
# August global Run
#      string connect = "sqlite_file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite/TestYB0/channelsMap_new/mapWh0.db"
#      untracked string catalog =  "file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite/TestYB0/channelsMap_new/mapWh0.xml"
# September Global Run
#      string connect = "sqlite_file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite/TestYB0/channelsMap_new/map_W1S10_W1S11_W0S10_W0S11_W0S12.db"
#      untracked string catalog =  "file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite/TestYB0/channelsMap_new/map_W1S10_W1S11_W0S10_W0S11_W0S12.xml"
# string connect = "frontier://Frontier/CMS_COND_DT"
# YB1:
    string connect = "sqlite_file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite/TestYB1/channelsMap_new/mapWh1.db"
    untracked string catalog = "file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite/TestYB1/channelsMap_new/mapWh1.xml"
# YB2:
#    string connect = "sqlite_file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite/TestYB2/channelsMap/mapWh2.db"
#    untracked string catalog = "file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite/TestYB2/channelsMap/mapWh2.xml"
      untracked bool siteLocalConfig = true
      untracked uint32 authenticationMethod = 0
      PSet DBParameters = { untracked int32 messageLevel = 0 }
    VPSet toGet = {
      { string record = "DTReadOutMappingRcd"
        string tag = "channelsMap" }
    }
  }

  include "CondCore/DBCommon/data/CondDBSetup.cfi"

# =================================================================
# 4) define here the T0 map to be used (t0.db s for ALL Sectors)
# ================================================================= 

# T0 from DB
    es_source t0 = PoolDBESSource {
      using CondDBSetup
        VPSet toGet = {
          {
            string record = "DTT0Rcd" 
              string tag = "tzero_13_03_07"
          }
        }
      bool loadAll = true
     string connect = "sqlite_file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite/TestYB0/t0/t0.db"
#    string connect = "sqlite_file:t0_copy.db"
#    untracked string catalog = "file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite/TestYB0/catalog.xml"
        string timetype = "runnumber" 
# untracked uint32 authenticationMethod = 0
# untracked uint32 messagelevel = 0
    }
  replace t0.catalog = "file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite/TestYB0/catalog.xml"

# ===============================================================
#  5) tTrig map to be used
# =============================================================== 
    es_source tTrigMapping = PoolDBESSource {
      using CondDBSetup
#    string connect = "sqlite_file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite/TestYB0/tTrig/tTrig_Sec4.db"
#    untracked string catalog = "file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite/TestYB0/catalog.xml"
#  July Global Run
#      string connect = "sqlite_file:tTrig_YB0_Sect4_global.db"
# August Global Run:
#      string connect = "sqlite_file:tTrig_YB0_Sect10_global.db"
# September Global Run:
#    string connect = "sqlite_file:ttrigg_YB0_YB1.db"
# local Runs
# YB+1:
#    string connect =  "sqlite_file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite/TestYB1/tTrig/tTrig_S2_S3.db" 
     string connect =  "sqlite_file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite/TestYB1/tTrig/tTrig_Sec4.db"
# YB+2:
#    string connect =  "sqlite_file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite/TestYB2/tTrig/tTrig_S5_S9.db" 
#    untracked string catalog = "file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite/TestYB2/catalog.xml"
      string timetype = "runnumber"
      untracked uint32 authenticationMethod = 0
      VPSet toGet = {
        {
          string record = "DTTtrigRcd"
            string tag = "tTrig"
        }
      }
  }
#   replace tTrigMapping.catalog = "file:tTrig_YB0_Sect10_global.xml"
#   replace tTrigMapping.catalog = "file:ttrigg_YB0_YB1.xml"
 replace tTrigMapping.catalog = "file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite/TestYB1/catalog.xml"
# replace tTrigMapping.catalog = "file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite/TestYB2/catalog.xml"


# ============================================
#  6) cfi's for reconstruction
# ============================================	
  
       
    include "Geometry/CMSCommonData/data/cmsSimIdealGeometryXML.cfi"
#   include "Geometry/MuonCommonData/data/muonIdealGeometryXML.cfi"
    include "Geometry/DTGeometry/data/dtGeometry.cfi"
    include "Geometry/CSCGeometry/data/cscGeometry.cfi"
    include "Geometry/MuonNumbering/data/muonNumberingInitialization.cfi"

    include "RecoLocalMuon/DTRecHit/data/dt1DRecHits_LinearDrift_CosmicData.cfi"
    include "RecoLocalMuon/DTSegment/data/dt2DSegments_CombPatternReco2D_LinearDrift_CosmicData.cfi"
    include "RecoLocalMuon/DTSegment/data/dt4DSegments_CombPatternReco4D_LinearDrift_CosmicData.cfi"


## Geometry
    include "Geometry/CommonDetUnit/data/globalTrackingGeometry.cfi"
    include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"
    #include "MagneticField/Engine/data/uniformMagneticField.cfi"
    include "RecoLocalMuon/DTSegment/test/uniformMagneticField.cfi"

es_prefer = IdealMagneticFieldRecordSource {}

    include "RecoMuon/DetLayers/data/muonDetLayerGeometry.cfi"
    include "RecoMuon/MuonSeedGenerator/data/CosmicMuonSeedProducer.cfi"
    replace CosmicMuonSeed.EnableCSCMeasurement = false
    include "RecoMuon/CosmicMuonProducer/data/cosmicMuons.cfi"
    replace cosmicMuons.TrajectoryBuilderParameters.EnableDTMeasurement = true
    replace cosmicMuons.TrajectoryBuilderParameters.EnableCSCMeasurement = false
    replace cosmicMuons.TrajectoryBuilderParameters.EnableRPCMeasurement = false
#replace cosmicMuons.TrajectoryBuilderParameters.BackwardMuonTrajectoryUpdatorParameters.Granularity= 0

    include "TrackPropagation/SteppingHelixPropagator/data/SteppingHelixPropagator.cfi"


# ===================================================
#  7) configuration of your analyzer
# ===================================================

## _Reader_ ##
    module DTAnalyzer = DTAnalyzer {

      bool doHits = true
      bool doSegs = true
      bool doSA = true
      bool isMC = true
##      bool isMC = false
##        untracked bool debug = true
        untracked bool debug = true
        bool LCT_RPC = true
        bool LCT_DT = true
        bool LCT_CSC = true
        untracked string rootFileName = "DTAnalyzer.root"
        string DTLocalTriggerLabel = "dtunpacker"
####	string  digiLabel = "dtunpacker"
        string recHits1DLabel = "dt1DRecHits"
        string recHits2DLabel = "dt2DSegments"
        string recHits4DLabel = "dt4DSegments"
# The module to be used for ttrig synchronization and its paraemter set
        untracked string tTrigMode = 'DTTTrigSyncFromDB'
        untracked PSet tTrigModeConfig = {
          untracked bool debug = false
# The ttrig from the time box fit is defined as mean + kFactor * sigma
            double kFactor = -1.3
# The velocity of signal propagation along the wire (cm/ns)
            double vPropWire = 24.4
# Switch on/off the TOF correction from pulses
            bool doT0Correction = true   
# Switch on/off the TOF correction for particles
            bool doTOFCorrection = false 
# Switch on/off the correction for the signal propagation along the wire
            bool doWirePropCorrection  = false 
# The correction type for TOF
            int32 tofCorrType = 2
            int32 wirePropCorrType = 0
        }
      string SALabel = "cosmicMuons"
    }

## _Reader_ ##
 module STAnalyzer = STAnalyzer {

   bool doSA = true
     bool isMC = true
##      bool isMC = false
     untracked bool debug = false
     bool LCT_RPC = true
     bool LCT_DT = true
     bool LCT_CSC = true
     untracked string rootFileName = "DTAnalyzer.root"
     string DTLocalTriggerLabel = "dtunpacker"
     string recHits1DLabel = "dt1DRecHits"
     string recHits2DLabel = "dt2DSegments"
     string recHits4DLabel = "dt4DSegments"
# The module to be used for ttrig synchronization and its paraemter set
     untracked string tTrigMode = 'DTTTrigSyncFromDB'
     untracked PSet tTrigModeConfig = {
       untracked bool debug = false
# The ttrig from the time box fit is defined as mean + kFactor * sigma
         double kFactor = -1.3
# The velocity of signal propagation along the wire (cm/ns)
         double vPropWire = 24.4
# Switch on/off the TOF correction from pulses
         bool doT0Correction = true   
# Switch on/off the TOF correction for particles
         bool doTOFCorrection = false 
# Switch on/off the correction for the signal propagation along the wire
         bool doWirePropCorrection  = false 
# The correction type for TOF
         int32 tofCorrType = 2
         int32 wirePropCorrType = 0
     }
   string SALabel = "cosmicMuons"
     string PropagatorName = "SteppingHelixPropagator"
 }

## _Reader_ ##
  module DTEffAnalyzer = DTEffAnalyzer {
    bool isMC = true
##      bool isMC = false
      untracked bool debug = false
      bool LCT_RPC = true
      bool LCT_DT = true
      bool LCT_CSC = true
      untracked string rootFileName = "DTEffAnalyzer.root"
      string DTLocalTriggerLabel = "dtunpacker"
      string recHits1DLabel = "dt1DRecHits"
      string recHits2DLabel = "dt2DSegments"
      string recHits4DLabel = "dt4DSegments"
      int32 minHitsSegment = 5
      double minChi2NormSegment = 20.
      double minCloseDist = 20.
  }

  #path p = {dtunpacker, dt1DRecHits, dt2DSegments, dt4DSegments}
  #path p = {dtunpacker, dt1DRecHits, dt2DSegments, dt4DSegments, CosmicMuonSeed, cosmicMuons, STAnalyzer}
  path p = {dtunpacker, dt1DRecHits, dt2DSegments, dt4DSegments, CosmicMuonSeed, cosmicMuons, DTAnalyzer, DTEffAnalyzer, STAnalyzer}
#path p = {dtunpacker, dt1DRecHits, dt2DSegments, dt4DSegments, standAloneCosmicMuons, DTAnalyzer}
#path p = {dtunpacker}

}
