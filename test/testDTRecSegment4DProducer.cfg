##
# Test the 4D-segments Producer  
# 
# HOW TO use it
#
# * default config: 
#	- starts from 1D RecHit (AllDTRecHits is true)
#	- uses the Combinatorial Pattern Recognition algo
#	  (possible choices are DTCombinatorialPatternReco4D and DTRefitAndCombineReco4D)
#	- uses the Parametrized Drift Velocity for the 1D RecHit Update
#	- doesn't call the DTRecSegment4DReader module
# 
# * if you want to start from digi	
#	- change the source ("_Input_" field)
#	- uncomment one of the lines which follows the "_Vdrift1D_" field
#	- add "DTRecHit1DProducer" (without apices) a the begin of the 
#	  module-execution path (the line which follows "_ExecPath_")	
#
#  * if you want to switch to Linear Drift Velocity in 1DRecHits Production
#	- invert the comment in the two lines which
#	  follow the "_Vdrift1D_" field
#
#  * if you want to change the 4D Reco algo
#	- Choose one of three lines which
#	  follow the "_4DAlgo_" field (comment out the others).
#	  CAVEAT: to use RefitAndCombine the 2D-segments must be in the event
#	  Since the RefitAndCombine is untested I suggest to use always the
#	  DTCombinatorialPatternReco algo.
#
#  * if you want to the DTCombinatorialPatternReco starts from the 2D-segments
#	- uncomment the line which follows the "_all1DHits_" fields
#	CAVEAT: the event must hold the 2D-segments  
#
#  * if you want the reader
#	- uncomment the lines which follow the "_Reader_" field
#	- add "recseg4danalizer" (without apices) at the end of the 
#	  module-execution path (the line which follows "_ExecPath_")
#
# Coming soon:
#  * the possibility to switch among Linear and Parametrized DriftVelocity in the 1DRecHit updating
#    (Now the default is the Parmetrized)
##

process PROD = {

	source = PoolSource{
			    ## _Input_ ##
#	    	  	    untracked vstring fileNames = {"file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/samples/2006-04-10/digi.root"}  
#	  	    	    untracked vstring fileNames = {"file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/samples/2006-05-04/rechit1D.root"} 
    			    untracked vstring fileNames = {"file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/samples/2006-05-04/rechit2D.root"} 

	   		    untracked int32 maxEvents = -1
			    untracked uint32 debugVebosity = 10
	                    untracked bool   debugFlag     = true
  		 	   }

	service = MessageLogger {
			   untracked vstring destinations = {"warning.txt","error.txt","stndoutput.txt"}
			   untracked PSet warning.txt     = { untracked string threshold = "WARNING" }
			   untracked PSet error.txt       = { untracked string threshold = "ERROR"   }
			   untracked PSet stndoutput.txt  = { untracked string threshold = "INFO"    }
	
			   untracked vstring fwkJobReports = {"FrameworkJobReport.xml"}
			   untracked vstring categories = { "FwkJob" }
			   untracked PSet FrameworkJobReport.xml = {
	        		                     untracked PSet default = { untracked int32 limit = 0 }
	                        		     untracked PSet FwkJob = { untracked int32 limit = 10000000 }
	                        		}
				}

	include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"
	include "Geometry/MuonCommonData/data/muonIdealGeometryXML.cfi"
	include "Geometry/DTGeometry/data/dtGeometry.cfi"
		
	## _Vdrift1D_ ##
#	include "RecoLocalMuon/DTRecHit/data/DTRecHit1DProducer_ParamDrift.cfi"
#	include "RecoLocalMuon/DTRecHit/data/DTRecHit1DProducer_LinearDrift.cfi"

	## _4DAlgo ##
	# CAVEAT: the file must contain the 2D segments if you want to use RefitAndCombine
	include "RecoLocalMuon/DTSegment/data/DTSegment4DProducer_CombPatternReco4D_ParamDrift.cfi"
#	include "RecoLocalMuon/DTSegment/data/DTSegment4DProducer_CombPatternReco4D_LinearDrift.cfi"
#    	include "RecoLocalMuon/DTSegment/data/DTSegment4DProducer_RefitAndCombine.cfi"
	  
	## _all1DHits_ ##	
	# CAVEAT: 
	#	1- the file must contain the 2D segments
	#	2- defined only for CombinatorialPatternReco
#	replace recseg4dbuilder.Reco4DAlgoConfig.AllDTRecHits = false

	## _Reader_ ##
#	module recseg4danalizer = DTRecSegment4DReader {
#							untracked bool debug = true
#					 		untracked string rootFileName = "seg4D.root"
#							string recHits4DLabel = "DTSegment4DProducer"
# 		 				       }

	module out = PoolOutputModule {
				       untracked string fileName ="/tmp/rechit4D.root"
		  		      }

	## _ExecPath_ ##
	path p = {DTSegment4DProducer}

	endpath this_is_the_end = {out}
}
