process PROD = {

source = PoolSource{ 
	    	  untracked vstring fileNames = {"file:/tmp/bellan/rechit.root"} 
	          untracked int32 maxEvents = -1
		  untracked uint32 debugVebosity = 10
                  untracked bool   debugFlag     = true
  		  }

		include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"

		include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"
		include "Geometry/DTGeometry/data/dtGeometry.cfi"
		
		# include "RecoLocalMuon/DTRecHit/data/dt1DRecHit_parametrizedDrift.cfi"

		## use this if you want the DTRefitAndCombineReco4D algo 
		# include "RecoLocalMuon/DTSegment/data/dt4DRecHit_RefitAndCombine.cfi"

		## OR use this if you want the DTCombinatorialPatternReco4D  algo 
		include "RecoLocalMuon/DTSegment/data/dt4DRecHit_CombinatorialPatternReco.cfi"

		service = MessageLogger {}

#		module recseg2danalizer = DTRecSegmentReader {
#		  untracked bool debug = true
#		  untracked string rootFileName = "seg.root"
# 		 }

		  module out = PoolOutputModule {
		  untracked string fileName ="/tmp/bellan/rechit2.root"
		  }


	#path p = {dtrechitbuilder, recseg2dbuilder,recseg2danalizer}
	path p = {recseg4dbuilder}
	endpath this_is_the_end = {out}

}
