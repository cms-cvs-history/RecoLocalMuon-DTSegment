process MuonHitsValid = 
{
  untracked PSet maxEvents = {untracked int32 input = -1}

  include "Configuration/StandardSequences/data/SimulationRandomNumberGeneratorSeeds.cff"

    include "Configuration/StandardSequences/data/FakeConditions.cff"
    include "Configuration/StandardSequences/data/Geometry.cff"
    include "Configuration/StandardSequences/data/MagneticField.cff" 

    untracked PSet options = {
      include "FWCore/Framework/test/cmsExceptionsFatalOption.cff"
        #untracked bool wantSummary = true
        untracked bool makeTriggerResults = true 
    }


  // If you want to read the SimHits from a file
  source = PoolSource {
  ## filenames are taken from DBS: RelVal Sample.
    untracked vstring fileNames = {
      '/store/relval/2008/3/31/RelVal-RelValSingleMuPt100-1206883569-HLT/0001/720AE6A1-4FFF-DC11-97BC-001A9281174A.root'
    }
  }


  // If you want to create the SimHits from a Gun Source
  # source = FlatRandomPtGunSource 
  # { 
  #   string psethack  = "single mu pt 100 neg"	
  #     untracked uint32 firstRun  =  1
  #     untracked PSet PGunParameters =
  #     {
  #       untracked vint32  PartID = {13}
  #       untracked double MinEta = -2.5
  #         untracked double MaxEta =  2.5
  #         untracked double MinPhi = -3.14159265358979323846 # in radians
  #         untracked double MaxPhi =  3.14159265358979323846
  #         untracked double MinPt  =  99.99
  #         untracked double MaxPt  = 100.01
  #     }
  #   untracked int32 Verbosity = 0 # set to 1 (or greater)  for printouts
  # }
  include "FWCore/MessageService/data/MessageLogger.cfi"
#   replace MessageLogger.cout.threshold = "ERROR"
#   untracked vstring destinations = { "cout" }
#   replace MessageLogger.destinations = "cout"  
#   untracked PSet cout = { untracked string threshold = "ERROR" }
    replace MessageLogger.cerr.default.limit = 10

    include "Configuration/StandardSequences/data/Simulation.cff"
    include "Configuration/StandardSequences/data/MixingNoPileUp.cff" 
    include "Configuration/StandardSequences/data/VtxSmearedGauss.cff" 

    include "DQMServices/Core/data/DQM.cfg"
    replace DQM.collectorHost = ""

# ===================================================
#  7) configuration of your analyzer
# ===================================================
## Local Reco
    include "RecoLocalMuon/Configuration/data/RecoLocalMuon.cff"

## Muon Reco
    #include "RecoMuon/Configuration/data/RecoMuon.cff"

    include "RecoLocalMuon/DTSegment/test/DTFilter.cfi"

## Hits and Segs ##
    include "RecoLocalMuon/DTSegment/test/DTAnalyzerDetailed.cfi"

## Segs ##
    include "RecoLocalMuon/DTSegment/test/DTSegAnalyzer.cfi"

## Segs Eff ##
    include "RecoLocalMuon/DTSegment/test/DTEffAnalyzer.cfi"

  sequence ana = {DTAnalyzerDetailed, DTSegAnalyzer, DTEffAnalyzer}
  path p = {DTFilter & (muonlocalreco_with_2DSegments, ana)}

# # Event output
#     include "Configuration/EventContent/data/EventContent.cff"
#     module FEVT = PoolOutputModule 
#     { 
#       using FEVTSIMEventContent
#         untracked string fileName = "single_mu_pt_100_negative.root"
#         untracked PSet datasets ={
#           untracked PSet dataset1 = {
#             untracked string dataTier = "FEVT"
#           }

#         }
#     }

}

